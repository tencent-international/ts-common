{"version":3,"sources":["../src/dictionary.ts","../src/request.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;AAcO,IAAM,sBAAN,MAA8D;AAAA,EAGjE,YAAY,KAAA,EAAqC;AAC/C,IAAA,IAAA,CAAK,KAAA,GAAQ,KAAA;AACb,IAAA,IAAA,CAAK,GAAA,GAAM,KAAA,CAAM,MAAA,CAAO,CAAC,KAAK,IAAA,KAAS;AACrC,MAAA,GAAA,CAAI,IAAA,CAAK,KAAU,CAAA,GAAI,IAAA;AACvB,MAAA,OAAO,GAAA;AAAA,KACT,EAAG,EAA2C,CAAA;AAAA;AAChD,EAEA,OAAA,CAAQ,KAAQ,MAAA,EAA0C;AAzB9D,IAAA,IAAA,EAAA,EAAA,EAAA,EAAA,EAAA;AA0BM,IAAA,MAAM,IAAA,GAAO,IAAA,CAAK,GAAA,CAAI,GAAG,CAAA;AACzB,IAAA,IAAI,CAAC,IAAA,EAAM;AACT,MAAA,OAAO,EAAE,KAAA,EAAO,GAAA,EAAK,KAAA,EAAO,GAAA,CAAI,UAAS,EAAE;AAAA;AAE7C,IAAA,MAAM,MAAI,EAAA,GAAA,IAAA,CAAK,aAAA,KAAL,mBAAqB,MAAA,CAAA,MAAA,CAAW,EAAA,GAAA,IAAA,CAAK,kBAAL,IAAA,GAAA,MAAA,GAAA,EAAA,CAAqB,EAAA,CAAA,CAAA;AAC/D,IAAA,OAAO,EAAE,KAAA,EAAO,GAAA,EAAK,KAAA,EAAA,CAAO,EAAA,GAAA,CAAA,IAAA,IAAA,GAAA,MAAA,GAAA,CAAA,CAAG,KAAA,KAAH,IAAA,GAAA,EAAA,GAAY,GAAA,CAAI,QAAA,EAAS,EAAG,GAAA,EAAK,CAAA,IAAA,IAAA,GAAA,MAAA,GAAA,CAAA,CAAG,GAAA,EAAI;AAAA;AACtE,EAEA,SAAS,MAAA,EAA4C;AACnD,IAAA,OAAO,IAAA,CAAK,KAAA,CAAM,GAAA,CAAI,CAAC,EAAE,KAAA,EAAM,KAAM,IAAA,CAAK,OAAA,CAAQ,KAAA,EAAO,MAAM,CAAC,CAAA;AAAA;AAClE,EAEA,OAAO,MAAA,EAAqD;AAC1D,IAAA,OAAO,IAAA,CAAK,KAAA,CAAM,MAAA,CAAO,CAAC,KAAK,IAAA,KAAS;AACtC,MAAA,GAAA,CAAI,KAAK,KAAK,CAAA,GAAI,KAAK,OAAA,CAAQ,IAAA,CAAK,OAAO,MAAM,CAAA;AACjD,MAAA,OAAO,GAAA;AAAA,KACT,EAAG,EAAyC,CAAA;AAAA;AAEhD;;;AC/BA,IAAI,QAAA;AAEG,SAAS,WAAW,CAAA,EAAmB;AAC5C,EAAA,QAAA,GAAW,CAAA;AACb;AAEA,SAAe,QAA6B,KAAA,EAAiC;AAAA,EAAA,OAAA,OAAA,CAAA,IAAA,EAAA,IAAA,EAAA,aAAA;AAC3E,IAAA,IAAI,CAAC,QAAA,EAAU;AACb,MAAA,MAAM,IAAI,MAAM,qHAAqH,CAAA;AAAA;AAEvI,IAAA,OAAO,SAAS,KAAK,CAAA;AAAA,GACvB,CAAA;AAAA;AACA,IAAO,eAAA,GAAQ","file":"index.js","sourcesContent":["import type { Locale } from './BasicTypes';\n\ninterface LocalizedDictionaryItem<T extends string | number = string> {\n    value: T;\n    localizedInfo?: Partial<Record<Locale, { label: string; tip?: string }>>;\n  }\n  \n  export type LabeledDictionaryItem<T extends string | number> = {\n    value: T;\n    label: string;\n    tip?: string;\n  };\n  \n\nexport class LocalizedDictionary<T extends string | number = string> {\n    private readonly items: LocalizedDictionaryItem<T>[];\n    private readonly map: Record<T, LocalizedDictionaryItem<T>>;\n    constructor(items: LocalizedDictionaryItem<T>[]) {\n      this.items = items;\n      this.map = items.reduce((acc, item) => {\n        acc[item.value as T] = item;\n        return acc;\n      }, {} as Record<T, LocalizedDictionaryItem<T>>);\n    }\n  \n    getItem(key: T, locale: Locale): LabeledDictionaryItem<T> {\n      const item = this.map[key];\n      if (!item) {\n        return { value: key, label: key.toString() };\n      }\n      const d = item.localizedInfo?.[locale] || item.localizedInfo?.['']; //default locale\n      return { value: key, label: d?.label ?? key.toString(), tip: d?.tip };\n    }\n  \n    getItems(locale: Locale): LabeledDictionaryItem<T>[] {\n      return this.items.map(({ value }) => this.getItem(value, locale));\n    }\n  \n    getMap(locale: Locale): Record<T, LabeledDictionaryItem<T>> {\n      return this.items.reduce((acc, item) => {\n        acc[item.value] = this.getItem(item.value, locale);\n        return acc;\n      }, {} as Record<T, LabeledDictionaryItem<T>>);\n    }\n  }\n  ","export interface RequestProps {\n    ignoreAuth?: boolean;\n    method: string;\n    url: string;\n    data?: any;\n    query?: object;\n    header?: object;\n  }\n  \n  export interface IRequest<T extends any = any> {\n    (props: RequestProps): Promise<T>;\n  }\n  \n  let instance: IRequest | undefined;\n  \n  export function useRequest(i: IRequest): void {\n    instance = i;\n  }\n  \n  async function request<T extends any = any>(props: RequestProps): Promise<T> {\n    if (!instance) {\n      throw new Error('Request instance is not initialized. Please ensure that the instance is properly configured before making requests.');\n    }\n    return instance(props);\n  }\n  export default request;"]}